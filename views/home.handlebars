{{! Use the main layout }}
{{!< main }}

<!-- Main Content Container -->
<div class="main-container">

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <!-- make a header here -->
            <form action="/posts" method="POST">
                <!-- title input field name = "title" -->
                <input type="text" name="title" placeholder="Post Title" required>
                <!-- text area input field name = "content" -->
                <textarea name="content" placeholder="What's on your mind?" required></textarea>

                <div class="form-actions">
                    {{!-- <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button> --}}
                    <div id="emojiSelectorIcon" onclick="toggleEmojiPanel()" >ðŸ™‚</div>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emojiSelector" class="emoji-selector">
                <input type="text" id="emojiSearch" oninput="searchEmojis()" placeholder="Search emojis...">
                <ul id="emojiList"></ul>
            </div>
            
            {{!-- <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji search, use oninput="searchEmojis() -->
                <input type="text" id="emoji-search" oninput="searchEmojis()" placeholder="Search Emojis">

                <!-- a div, id = "emoji-grid" -->
                <div id="emoji-grid"></div>
            </div> --}}
        </section>
    {{!-- {{else}}
        <p>Please <a href="/auth/google">log in with Google</a> to post.</p> --}}
    {{/if}}

     <!-- Post Sorting options -->
    <div class="sort-options">
        <label for="sort-select">Sort by:</label>
        <select id="sort-select" onchange="sortPosts()">
            <option value="recency" {{#ifCond sortOption 'recency'}}selected{{/ifCond}}>Recent</option>
            <option value="likes" {{#ifCond sortOption 'likes'}}selected{{/ifCond}}>Likes</option>
        </select>
    </div>
    
    <section class="posts-container">
        {{!-- <select id="sortOption">
            <option value="recency">Recency</option>
            <option value="likes">Likes</option>
        </select> --}}
        <!-- recent posts -->

        {{#if posts.length}}
        <ul>
            {{#each posts}}
                <!-- you have to pass the user in to posts and this is the syntax -->
                {{!-- {{> post this user=../user}} --}}
                <div class="post">
                    <div class="post-content">
                        <div class="post-avatar">
                        <!-- the user's avatar -->
                        <img src="/avatar/{{username}}" alt="{{username}}'s avatar">
                        </div>
                        
                        <div class="post-text">
                            <h3>{{this.title}}</h3>
                            <p>{{this.content}}</p>
                            <div class="post-meta">
                                {{!-- Delete or Like button --}}
                                {{#ifCond this.username ../user.username}}
                                <form action="/delete/{{this.id}}" method="POST" class="delete-button">
                                    <button type="submit"> <i class="fas fa-trash-alt"></i> </button>
                                </form>
                                {{else}}
                                <form action="/like/{{this.id}}" method="POST" class="like-button">
                                    <button type="submit"> â™¥ </button>
                                </form>
                                {{/ifCond}}
                                <div class="posted-by">
                                    <p><small>Posted by {{this.username}} on {{this.timestamp}}</small></p>
                                </div>
                                <div class="likes">
                                    <p><small>Likes: {{this.likes}}</small></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                {{!-- <li>
                    <div class="post-header">
                        <span> {{this.title}}</span>
                    </div>
                    <div class="post-actions">
                        {{#ifCond this.username ../user.username}}
                            <form action="/delete/{{this.id}}" method="POST">
                                <button type="submit">Delete</button>
                            </form>
                        {{/ifCond}}
                    </div>
                    <p>{{this.content}}</p>
                    <div class="post-actions">
                        <span class="likes">Likes: {{this.likes}}</span>
                        <span class="posted-by">Posted by {{this.username}} on {{this.timestamp}}</span>
                        {{#ifCond this.username ../user.username}}
                        {{else}}
                            <form action="/like/{{this.id}}" method="POST">
                                <button type="submit">Like</button>
                            </form>
                        {{/ifCond}}
                    </div>
                </li> --}}

            {{/each}}
        </ul>
        {{else}}
            <!-- no posts, oh no, what now? -->
            <p>No posts to display.</p>
        {{/if}}
    </section>
</section>
</div>

{{! JavaScript to handle sorting logic }}
<script>
    function sortPosts() {
        const sortOption = document.getElementById('sort-select').value;
        window.location.href = `/?sort=${sortOption}`;
    }
</script>

{{! JavaScript for Emoji Integration }}
<script>
/*
 You want to show a subset of the emojis. About 200. However,
 you also want the user to be able to search all emojis,
 so, put them in this array when the array is empty so 
 that you have them.
*/

const emojiSelectorIcon = document.getElementById('emojiSelectorIcon');
const emojiSelector = document.getElementById('emojiSelector');
const emojiList = document.getElementById('emojiList');
const emojiSearch = document.getElementById('emojiSearch');
const postContent = document.querySelector('textarea[name="content"]');

// Toggle the emoji selector's visibility
function toggleEmojiPanel() {
    emojiSelector.classList.toggle('active');

    // Fetch emojis from the server and load them into the list
    fetch('https://emoji-api.com/emojis?access_key=6ff90a0b084869fe2355f4cddab92fa159843840')
        .then(res => res.json())
        .then(data => displayEmojis(data))
        .catch(error => console.error('Error fetching emojis:', error));
}

// Function to load emojis into the list
function displayEmojis(emojis) {
    emojiList.innerHTML = ''; // Clear any existing emojis
    emojis.forEach(emoji => {
        let li = document.createElement('li');
        li.setAttribute('emoji-name', emoji.slug);
        li.textContent = emoji.character;
        li.onclick = () => insertEmoji(emoji.character);
        emojiList.appendChild(li);
    });
}

// Filter emojis based on search input
function searchEmojis() {
    emojiSearch.addEventListener('keyup', e => {
        let value = e.target.value.toLowerCase();
        let emojis = document.querySelectorAll('#emojiList li');
        emojis.forEach(emoji => {
            if (emoji.getAttribute('emoji-name').toLowerCase().includes(value)) {
                emoji.style.display = 'flex';
            } else {
                emoji.style.display = 'none';
            }
        });
    });
}

// Function to insert the selected emoji into the textarea
function insertEmoji(emoji) {
    // put an emoji on a form somehow. 
    const startPos = postContent.selectionStart;
    const endPos = postContent.selectionEnd;

    // do this when you're doing getting the emoji on the form
    postContent.value = postContent.value.substring(0, startPos) + emoji + postContent.value.substring(endPos, postContent.value.length);
    postContent.focus();
    postContent.selectionStart = startPos + emoji.length;
    postContent.selectionEnd = startPos + emoji.length;
    toggleEmojiPanel(); // Optional: Close the emoji panel after inserting an emoji
}

</script>

